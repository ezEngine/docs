{
  "conceptual": "\n<p sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"3\">To create a new component type, create a new <a href=\"~/pages/docs/custom-code/angelscript/as-asset.md\" sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"3\">AngelScript asset</a>. In that asset document, select the <code sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"3\">Source</code> mode to edit the script either inline or in an external editor.</p>\n<p sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"5\">Choose a name for your component class and make sure the name is also specified in the asset <code sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"5\">Class Name</code> property.</p>\n<h2 id=\"base-class\" sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"7\">Base Class</h2>\n<p sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"9\">Your component class must derive from the base class <code sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"9\">ezAngelScriptClass</code> either directly or indirectly.</p>\n<h2 id=\"entry-points\" sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"11\">Entry Points</h2>\n<p sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"13\">If any of these functions is present, the <a href=\"~/pages/docs/custom-code/visual-script/script-component.md\" sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"13\">script component</a> will execute them in the same way as for C++ components. See <a href=\"~/pages/docs/runtime/world/components.md#component-activation\" sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"13\">Component Activation</a> for details.</p>\n<ul sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"15\">\n<li sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"15\"><p sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"15\"><code sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"15\">void OnActivated()</code>: If present, this is executed every time the component <em sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"15\">active state</em> changes to <em sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"15\">active</em>. This is usually shortly after component creation. In an editor this happens right after scene loading or when a new object is added. It is rare to use this entry point, except when your component supports being deactivated and re-actived multiple times.</p>\n</li>\n<li sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"17\"><p sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"17\"><code sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"17\">void OnDeactivated()</code>: If present, this is executed when the component <em sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"17\">active state</em> changes to <em sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"17\">inactive</em>. This happens shortly before destruction, and when the component is deliberately deactivated.</p>\n</li>\n<li sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"19\"><p sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"19\"><code sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"19\">void OnSimulationStarted()</code>: If present, this function gets executed when the game simulation starts. In an editor this happens when you <a href=\"~/pages/docs/editor/run-scene.md\" sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"19\">run the scene</a> in any way. This is where you should execute first time setup code, for example to detect which child objects exist to store handles to them.</p>\n</li>\n<li sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"21\"><p sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"21\"><code sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"21\">void Update(ezTime deltaTime)</code>: If present, this function gets executed in regular intervals. The interval can be configured on the script component, but the script can also dynamically adjust it through the function <code sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"21\">ezAngelScriptClass::SetUpdateInterval()</code>.\nThe <code sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"22\">deltaTime</code> argument gives you the time between calls to <code sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"22\">Update()</code>, which is typically what you should use to update game logic.</p>\n</li>\n</ul>\n<p sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"24\">If none of these entry points is present, the class must have at least one <a href=\"~/pages/docs/custom-code/angelscript/as-messaging.md#handling-messages\" sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"24\">message handler</a>.</p>\n<h2 id=\"message-handlers\" sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"26\">Message Handlers</h2>\n<p sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"28\">AngelScript components can both send and receive messages. The article <a href=\"~/pages/docs/custom-code/angelscript/as-messaging.md\" sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"28\">Messaging in AngelScript Code</a> explains this in more detail.</p>\n<h2 id=\"writing-your-component\" sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"30\">Writing Your Component</h2>\n<p sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"32\">To initialize things, use the <code sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"32\">OnSimulationStarted()</code> callback. For regular updates, put your code into the <code sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"32\">Update()</code> function. Use <a href=\"~/pages/docs/custom-code/angelscript/as-messaging.md\" sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"32\">messaging</a> to communicate with unknown component types or when a delay is desired.</p>\n<p sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"34\">For an overview what functionality is available through AngelScript, check out the <a href=\"~/pages/docs/custom-code/angelscript/as-api.md\" sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"34\">AngelScript API</a>.</p>\n<h2 id=\"see-also\" sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"36\">See Also</h2>\n<ul sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"38\">\n<li sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"38\"><a href=\"~/pages/docs/custom-code/angelscript/as-asset.md\" sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"38\">AngelScript Asset</a></li>\n<li sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"39\"><a href=\"~/pages/docs/custom-code/angelscript/as-messaging.md\" sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"39\">Messaging in AngelScript Code</a></li>\n<li sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"40\"><a href=\"~/pages/docs/custom-code/angelscript/as-api.md\" sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"40\">AngelScript API</a></li>\n</ul>\n",
  "type": "Conceptual",
  "source": {
    "remote": {
      "path": "pages/docs/custom-code/angelscript/as-components.md",
      "branch": "main",
      "repo": "https://github.com/ezEngine/docs-src"
    },
    "startLine": 0,
    "endLine": 0
  },
  "path": "pages/docs/custom-code/angelscript/as-components.md",
  "documentation": {
    "remote": {
      "path": "pages/docs/custom-code/angelscript/as-components.md",
      "branch": "main",
      "repo": "https://github.com/ezEngine/docs-src"
    },
    "startLine": 0,
    "endLine": 0
  },
  "_appFaviconPath": "assets/images/favicon.svg",
  "_appFooter": "Hello",
  "_appLogoPath": "assets/images/EZ-text.svg",
  "_appName": "ezEngine",
  "_appTitle": "ezEngine",
  "_enableGoogleAnalytics": true,
  "_enableNewTab": true,
  "_enableSearch": true,
  "_gitContribute": {
    "repo": "https://github.com/ezEngine/docs-src",
    "branch": "main"
  },
  "_systemKeys": [
    "conceptual",
    "type",
    "source",
    "path",
    "documentation",
    "title",
    "rawTitle",
    "wordCount"
  ],
  "rawTitle": "<h1 id=\"custom-components-with-angelscript\" sourcefile=\"pages/docs/custom-code/angelscript/as-components.md\" sourcestartlinenumber=\"1\">Custom Components with AngelScript</h1>",
  "title": "Custom Components with AngelScript",
  "wordCount": 380,
  "_key": "pages/docs/custom-code/angelscript/as-components.md",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../../../toc.html",
  "_path": "pages/docs/custom-code/angelscript/as-components.html",
  "_rel": "../../../../",
  "_tocKey": "~/pages/docs/toc.md",
  "_tocPath": "pages/docs/toc.html",
  "_tocRel": "../../toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  },
  "_disableToc": false,
  "docurl": "https://github.com/ezEngine/docs-src/blob/main/pages/docs/custom-code/angelscript/as-components.md/#L1"
}