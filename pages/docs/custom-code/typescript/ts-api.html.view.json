{
  "conceptual": "\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"3\">This page gives an overview over the functionality that EZ exposes through TypeScript. For an introduction to the TypeScript language please refer to the web (for example <a href=\"https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes.html\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"3\">TypeScript in 5 minutes</a>).</p>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"5\">Note that you don't need to install anything to use TypeScript in EZ, the required TypeScript transpiler is already included.</p>\n<h2 id=\"api-documentation\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"7\">API Documentation</h2>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"9\">All TypeScript APIs are documented with code comments. In Visual Studio Code you can see the documentation for each function by hovering the mouse cursor over it:</p>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"11\"><img src=\"~/pages/docs/custom-code/typescript/media/function-docs.png\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"11\" alt=\"Function documentation\"></p>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"13\">You can also <strong sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"13\">jump to a function or class declaration</strong> using <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"13\">F12</code>. This is useful to see what functions are available on a given class.</p>\n<h2 id=\"importing-files-require\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"15\">Importing Files (<code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"15\">require</code>)</h2>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"17\">TypeScript and JavaScript have multiple mechanisms how to make code from other files available. In EZ only the <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"17\">require</code> mechanism will work:</p>\n<pre><code class=\"lang-typescript\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"19\">import EZ = require(&quot;TypeScript/ez&quot;)\n</code></pre>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"23\">This imports all <em sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"23\">exported</em> declarations from the file <em sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"23\">TypeScript/ez.ts</em> into an object called <em sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"23\">ez</em> in this file. Thus typing <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"23\">ez.</code> grants access to all the exported classes, namespaces and functions from that file.</p>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"25\">The path given to <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"25\">require</code> must be relative to a <a href=\"~/pages/docs/projects/data-directories.md\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"25\">data directory</a>. For example, the file above is located in the <em sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"25\">Plugins</em> data directory.</p>\n<blockquote sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"27\">\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"27\"><strong sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"27\">Note:</strong></p>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"29\"><code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"29\">require</code> always returns an object and therefore you must assign its result to a variable. Consequently, there is no way to make the imported names globally accessible, you can only access them through that variable.</p>\n</blockquote>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"31\">To import multiple files, you need to store each result in a different variable:</p>\n<pre><code class=\"lang-typescript\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"33\">import EZ = require(&quot;TypeScript/ez&quot;)\nimport _ge = require(&quot;Scripting/GameEnums&quot;)\n</code></pre>\n<h3 id=\"re-exporting-imported-declarations\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"38\">Re-exporting Imported Declarations</h3>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"40\">You can re-export declarations from a <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"40\">.ts</code> file that you imported from somewhere else. For plenty of examples, look at the file <em sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"40\">ez.ts</em>:</p>\n<pre><code class=\"lang-typescript\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"42\">import __Log = require(&quot;TypeScript/ez/Log&quot;)\nexport import Log = __Log.Log;\n</code></pre>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"47\">Here, everything from the file <em sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"47\">Log.ts</em> is imported into the variable <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"47\">__Log</code>. We then selectively re-export the namespace <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"47\">Log</code> from the variable <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"47\">__Log</code> again, under the name <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"47\">Log</code>. We could rename the exported symbol, if we wanted.</p>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"49\">Unfortunately, there does not seem to be a way to re-export <em sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"49\">all</em> declarations automatically, you need to name each one individually.</p>\n<h2 id=\"scenegraph\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"51\">Scenegraph</h2>\n<h3 id=\"ezcomponent\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"53\">ez.Component</h3>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"55\"><code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"55\">ez.Component</code> is the base class for all component types, including the C++ components. Your custom components must extend either <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"55\">ez.TypescriptComponent</code> or <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"55\">ez.TickedTypescriptComponent</code>.</p>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"57\">The functionality exposed through <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"57\">ez.Component</code> is mostly identical to all other <a href=\"~/pages/docs/runtime/world/components.md\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"57\">components</a>.</p>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"59\">If you hold a reference to a component for more than a frame, it is vital to use <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"59\">ez.Component.IsValid()</code> to check whether the component is still alive, before accessing it. If <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"59\">IsValid()</code> returns true, the component can be accessed safely for the rest of the frame.</p>\n<h3 id=\"ezgameobject\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"61\">ez.GameObject</h3>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"63\"><code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"63\">ez.GameObject</code> exposes the <a href=\"~/pages/docs/runtime/world/game-objects.md\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"63\">game object</a> functionality to TypeScript mostly 1:1. Through this you modify object positions, delete or move child nodes, access attached components and send messages.</p>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"65\">You can't extend game objects.</p>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"67\">If you hold a reference to a game object for more than a frame, it is vital to use <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"67\">ez.GameObject.IsValid()</code> to check whether it is still alive, before accessing it. If <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"67\">IsValid()</code> returns true, the game object can be accessed safely for the rest of the frame.</p>\n<h3 id=\"ezworld\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"69\">ez.World</h3>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"71\"><code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"71\">ez.World</code> exposes the <a href=\"~/pages/docs/runtime/world/worlds.md\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"71\">world</a> functionality. However, the functionality provided is only a limited subset. Some functionality is simply not needed in the TypeScript binding, and some is exposed differently.</p>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"73\">Since all TypeScript code is executed in the context of one specific world, you can't access a different world from TypeScript code. Therefore, there is no need to <em sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"73\">get</em> the world that you operate in (as is common in C++). Therefore <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"73\">ez.World</code> is only a namespace, not a class, and all functionality is always accessible.</p>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"75\">Additionally, functionality like <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"75\">ez.Clock</code> and <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"75\">ez.Random</code>, which are in C++ bound directly to a world, are similarly just global namespaces in TypeScript and not exposed through <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"75\">ez.World</code>.</p>\n<h3 id=\"ezmessage\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"77\">ez.Message</h3>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"79\"><code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"79\">ez.Message</code> and <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"79\">ez.EventMessage</code> are base classes for all messages. The page <a href=\"~/pages/docs/custom-code/typescript/ts-messaging.md\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"79\">Messaging in TypeScript Code</a> goes into more detail.</p>\n<h2 id=\"math\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"81\">Math</h2>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"83\">TypeScript already provides mathematical functions through the <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"83\">Math</code> namespace. Additionally, the EZ API provides these classes:</p>\n<ul sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"85\">\n<li sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"85\"><code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"85\">ez.Vec2</code> and <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"85\">ez.Vec3</code>: 2 and 3 component vectors for 2D and 3D linear algebra.</li>\n<li sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"86\"><code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"86\">ez.Mat3</code> and <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"86\">ez.Mat4</code>: A 3x3 and 4x4 matrix.</li>\n<li sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"87\"><code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"87\">ez.Quat</code>: A quaternion class to handle rotations.</li>\n<li sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"88\"><code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"88\">ez.Transform</code>: A transform stores a position (<code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"88\">ez.Vec3</code>), a rotation (<code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"88\">ez.Quat</code>) and a scale factor (<code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"88\">ez.Vec3</code>). It is mainly used to represent object transformations, and is more convenient than using 4x4 matrices.</li>\n<li sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"89\"><code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"89\">ez.Angle</code>: Provides utility functions to work with angles. Mostly to convert between radians and degree.</li>\n<li sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"90\"><code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"90\">ez.Color</code>: A utility class to work with colors. All colors are treated as HDR colors in linear space, though conversions to and from Gamma space are provided. See <a href=\"~/pages/docs/appendix/color-spaces.md\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"90\">color spaces (TODO)</a> for details.</li>\n</ul>\n<h2 id=\"debugging\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"92\">Debugging</h2>\n<h3 id=\"ezlog\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"94\">ez.Log</h3>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"96\">The <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"96\">ez.Log</code> namespace contains functions for writing messages to the <a href=\"~/pages/docs/debugging/logging.md\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"96\">log</a>. This is a useful tool for debugging.</p>\n<h3 id=\"ezdebug\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"98\">ez.Debug</h3>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"100\">The <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"100\">ez.Debug</code> namespace contains various functionality. There are functions for debug rendering, ie. to insert shapes into the rendered output, which can be helpful in visualizing many aspects. <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"100\">ez.Debug</code> also provides access to <a href=\"~/pages/docs/debugging/cvars.md\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"100\">CVars</a> and <a href=\"~/pages/docs/debugging/console.md#console-functions\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"100\">console functions</a>.</p>\n<h2 id=\"utilities\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"102\">Utilities</h2>\n<h3 id=\"ezclock\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"104\">ez.Clock</h3>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"106\">The <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"106\">ez.Clock</code> namespace has functions to access the <a href=\"~/pages/docs/runtime/world/worlds.md\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"106\">world's</a> clock. The clock represents the game time, meaning it advances at its own pace, which can be adjusted dynamically. When you need to know how much time has passed since the last frame (not the last <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"106\">Tick()</code>), use <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"106\">ez.Clock.GetTimeDiff()</code>. Use <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"106\">ez.Clock.GetAccumulatedTime()</code> it you need to measure longer durations.</p>\n<h3 id=\"eztime\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"108\">ez.Time</h3>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"110\">In TypeScript code time should be stored as <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"110\">number</code> types and measured in seconds. This is how all functions expect time values. <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"110\">ez.Time</code> contains utility functions to convert time values to other units and to query the current system time.</p>\n<h3 id=\"ezrandom\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"112\">ez.Random</h3>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"114\">The <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"114\">ez.Random</code> namespace contains functions to get random numbers.</p>\n<h2 id=\"physics\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"116\">Physics</h2>\n<p sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"118\">In <code sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"118\">ez.Physics</code> you find functions to query the physics engine. For example to do raycasts or overlap tests.</p>\n<h2 id=\"see-also\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"120\">See Also</h2>\n<ul sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"123\">\n<li sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"123\"><a href=\"~/pages/docs/custom-code/typescript/ts-component.md\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"123\">TypeScript Component</a></li>\n<li sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"124\"><a href=\"~/pages/docs/custom-code/typescript/ts-messaging.md\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"124\">Messaging in TypeScript Code</a></li>\n</ul>\n",
  "type": "Conceptual",
  "source": {
    "remote": {
      "path": "pages/docs/custom-code/typescript/ts-api.md",
      "branch": "docfx_update",
      "repo": "https://github.com/ezEngine/docs-src"
    },
    "startLine": 0.0,
    "endLine": 0.0
  },
  "path": "pages/docs/custom-code/typescript/ts-api.md",
  "documentation": {
    "remote": {
      "path": "pages/docs/custom-code/typescript/ts-api.md",
      "branch": "docfx_update",
      "repo": "https://github.com/ezEngine/docs-src"
    },
    "startLine": 0.0,
    "endLine": 0.0
  },
  "_appFaviconPath": "assets/images/favicon.svg",
  "_appFooter": "Hello",
  "_appLogoPath": "assets/images/EZ-text.svg",
  "_appName": "ezEngine",
  "_appTitle": "ezEngine",
  "_enableGoogleAnalytics": true,
  "_enableNewTab": true,
  "_enableSearch": true,
  "_gitContribute": {
    "repo": "https://github.com/ezEngine/docs-src",
    "branch": "main"
  },
  "_systemKeys": [
    "conceptual",
    "type",
    "source",
    "path",
    "documentation",
    "title",
    "rawTitle",
    "wordCount"
  ],
  "rawTitle": "<h1 id=\"typescript-api\" sourcefile=\"pages/docs/custom-code/typescript/ts-api.md\" sourcestartlinenumber=\"1\">TypeScript API</h1>",
  "title": "TypeScript API",
  "wordCount": 956.0,
  "_key": "pages/docs/custom-code/typescript/ts-api.md",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../../../toc.html",
  "_path": "pages/docs/custom-code/typescript/ts-api.html",
  "_rel": "../../../../",
  "_tocKey": "~/pages/docs/toc.md",
  "_tocPath": "pages/docs/toc.html",
  "_tocRel": "../../toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  },
  "_disableToc": false,
  "docurl": "https://github.com/ezEngine/docs-src/blob/main/pages/docs/custom-code/typescript/ts-api.md/#L1"
}