{
  "conceptual": "\n<p sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"3\">The rendering in EZ is optimized to handle large and complex data efficiently. However, to achieve this you must implement certain patterns, and to get started a non-trivial amount of code is involved. To visualize simple things, the <code sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"3\">ezDebugRenderer</code> is provided. This class allows you to quickly add debug visualizations to your game, with just a few lines of code.</p>\n<p sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"5\">This interface is also (partially) available through <a href=\"~/pages/docs/custom-code/angelscript/angelscript-overview.md\" sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"5\">AngelScript</a>.</p>\n<p sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"7\"><img src=\"~/pages/docs/debugging/media/debug-rendering.jpg\" sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"7\" alt=\"Debug rendering\"></p>\n<h2 id=\"usage\" sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"9\">Usage</h2>\n<p sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"11\">The <code sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"11\">ezDebugRenderer</code> class has a number of static functions that you can call from any thread and at any time. The debug renderer gathers all requests and renders them at a specific point in the frame. Afterwards all requests are cleared and you must resubmit the same calls in the next frame, if you want it to appear again.</p>\n<h3 id=\"render-context\" sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"13\">Render Context</h3>\n<p sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"15\">Every function in <code sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"15\">ezDebugRenderer</code> takes an <code sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"15\">ezDebugRendererContext</code> as its first parameter. This specifies where the debug geometry should be rendered. You can either pass in an <code sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"15\">ezViewHandle</code> or an <code sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"15\">ezWorld</code> here. If you pass in a view handle, the geometry will only be rendered in the corresponding <code sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"15\">ezView</code>, meaning you can have the debug geometry only appear in a specific render target. If you pass in an <code sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"15\">ezWorld</code>, the geometry appears in all views that render that world.</p>\n<p sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"17\">It is more common to bind debug geometry to an entire <code sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"17\">ezWorld</code>, such that it appears in any view.</p>\n<h3 id=\"debug-geometry-types\" sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"19\">Debug Geometry Types</h3>\n<p sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"21\">The debug renderer allows you to render arbitrary lines and triangles. For convenience it also provides functions to render a number of common shapes:</p>\n<ul sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"23\">\n<li sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"23\">3D lines</li>\n<li sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"24\">2D lines (screenspace)</li>\n<li sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"25\">Boxes (wireframe)</li>\n<li sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"26\">Boxes (solid)</li>\n<li sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"27\">Spheres (wireframe)</li>\n<li sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"28\">Capsules (wireframe)</li>\n<li sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"29\">Frustums (wireframe)</li>\n<li sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"30\">3D triangles (solid)</li>\n<li sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"31\">3D triangles (textured)</li>\n<li sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"32\">2D rectangles (solid, screenspace)</li>\n<li sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"33\">2D rectangles (textured, screenspace)</li>\n<li sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"34\">2D text (screenspace)</li>\n<li sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"35\">2D info text (screenspace, automatically placed non-overlapping)</li>\n<li sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"36\">3D text (3D location, fixed size and always facing the camera)</li>\n</ul>\n<h3 id=\"shading\" sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"38\">Shading</h3>\n<p sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"40\">The debug renderer always uses a fullbright shading model. No lighting is ever applied to debug geometry. In fact, most geometry simply has a color, and only some functions allow you to choose a texture.</p>\n<h3 id=\"text-size\" sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"42\">Text Size</h3>\n<p sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"44\">Text size is given in pixels, which means text will appear very small or very large on displays with different resolutions. The <a href=\"~/pages/docs/debugging/cvars.md\" sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"44\">CVar</a> <code sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"44\">cvar_DebugTextScale</code> is used to scale debug text sizes. The same can be done through <code sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"44\">ezDebugRenderer::SetTextScale()</code>. Use this to adjust debug text sizes as needed. The editor automatically sets this value to adjust for different resolutions.</p>\n<h2 id=\"example\" sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"46\">Example</h2>\n<p sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"48\">A full example for how to use the debug renderer is given in the <a href=\"~/pages/samples/sample-game-plugin.md\" sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"48\">Sample Game Plugin</a>. Here, the <code sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"48\">DebugRenderComponent</code> shows how to utilize the debug renderer.</p>\n<p sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"50\">The following code snippet is sufficient to render a wireframe sphere at the location of the component:</p>\n<!-- BEGIN-DOCS-CODE-SNIPPET: debugrender-sphere -->\n<pre><code class=\"lang-cpp\" sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"53\">ezBoundingSphere sphere = ezBoundingSphere::MakeFromCenterAndRadius(ezVec3::MakeZero(), m_fSize);\nezDebugRenderer::DrawLineSphere(GetWorld(), sphere, m_Color, ownerTransform);\n</code></pre>\n<!-- END-DOCS-CODE-SNIPPET -->\n<p sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"59\">This has to be called in every frame in which it should appear. Therefore this has been added to the <code sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"59\">DebugRenderComponent::Update()</code> function.</p>\n<h2 id=\"performance-considerations\" sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"61\">Performance Considerations</h2>\n<p sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"63\">The debug renderer is meant for quickly visualizing data. If the data potentially changes every frame anyway (like visualizing AI raycasts), its performance will be on par with what a 'proper' solution could do. However, if you want to place things in a scene that may stay for a longer duration, it's usually much better to instead build a game object, attach a <a href=\"~/pages/docs/graphics/meshes/mesh-component.md\" sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"63\">mesh component</a> and just render a proper asset. This enables culling, static object optimizations, and gives you the option to choose <a href=\"~/pages/docs/materials/materials-overview.md\" sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"63\">materials</a>.</p>\n<h2 id=\"see-also\" sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"65\">See Also</h2>\n<ul sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"67\">\n<li sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"67\"><a href=\"~/pages/docs/debugging/debug-cpp.md\" sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"67\">Debugging C++ Code</a></li>\n<li sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"68\"><a href=\"~/pages/docs/graphics/shaders/shader-debugging.md\" sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"68\">Shader Debugging</a></li>\n<li sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"69\"><a href=\"~/pages/docs/physics/jolt/jolt-debug-visualizations.md\" sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"69\">Jolt Debug Visualizations</a></li>\n<li sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"70\"><a href=\"~/pages/docs/custom-code/angelscript/angelscript-overview.md\" sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"70\">Custom Code with AngelScript</a></li>\n</ul>\n",
  "type": "Conceptual",
  "source": {
    "remote": {
      "path": "pages/docs/debugging/debug-rendering.md",
      "branch": "main",
      "repo": "https://github.com/ezEngine/docs-src"
    },
    "startLine": 0,
    "endLine": 0
  },
  "path": "pages/docs/debugging/debug-rendering.md",
  "documentation": {
    "remote": {
      "path": "pages/docs/debugging/debug-rendering.md",
      "branch": "main",
      "repo": "https://github.com/ezEngine/docs-src"
    },
    "startLine": 0,
    "endLine": 0
  },
  "_appFaviconPath": "assets/images/favicon.svg",
  "_appFooter": "Hello",
  "_appLogoPath": "assets/images/EZ-text.svg",
  "_appName": "ezEngine",
  "_appTitle": "ezEngine",
  "_enableGoogleAnalytics": true,
  "_enableNewTab": true,
  "_enableSearch": true,
  "_gitContribute": {
    "repo": "https://github.com/ezEngine/docs-src",
    "branch": "main"
  },
  "_systemKeys": [
    "conceptual",
    "type",
    "source",
    "path",
    "documentation",
    "title",
    "rawTitle",
    "wordCount"
  ],
  "rawTitle": "<h1 id=\"debug-rendering\" sourcefile=\"pages/docs/debugging/debug-rendering.md\" sourcestartlinenumber=\"1\">Debug Rendering</h1>",
  "title": "Debug Rendering",
  "wordCount": 577,
  "_key": "pages/docs/debugging/debug-rendering.md",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../../../toc.html",
  "_path": "pages/docs/debugging/debug-rendering.html",
  "_rel": "../../../",
  "_tocKey": "~/pages/docs/toc.md",
  "_tocPath": "pages/docs/toc.html",
  "_tocRel": "../toc.html",
  "__global": {
    "namespacesInSubtitle": "Namespaces",
    "classesInSubtitle": "Classes",
    "structsInSubtitle": "Structs",
    "interfacesInSubtitle": "Interfaces",
    "enumsInSubtitle": "Enums",
    "delegatesInSubtitle": "Delegates",
    "constructorsInSubtitle": "Constructors",
    "fieldsInSubtitle": "Fields",
    "propertiesInSubtitle": "Properties",
    "methodsInSubtitle": "Methods",
    "eventsInSubtitle": "Events",
    "operatorsInSubtitle": "Operators",
    "eiisInSubtitle": "Explicit Interface Implementations",
    "functionsInSubtitle": "Functions",
    "variablesInSubtitle": "Variables",
    "typeAliasesInSubtitle": "Type Aliases",
    "membersInSubtitle": "Members",
    "improveThisDoc": "Edit this page",
    "viewSource": "View Source",
    "inheritance": "Inheritance",
    "derived": "Derived",
    "inheritedMembers": "Inherited Members",
    "package": "Package",
    "namespace": "Namespace",
    "assembly": "Assembly",
    "syntax": "Syntax",
    "overrides": "Overrides",
    "implements": "Implements",
    "remarks": "Remarks",
    "examples": "Examples",
    "seealso": "See Also",
    "declaration": "Declaration",
    "parameters": "Parameters",
    "typeParameters": "Type Parameters",
    "type": "Type",
    "name": "Name",
    "description": "Description",
    "returns": "Returns",
    "fieldValue": "Field Value",
    "propertyValue": "Property Value",
    "eventType": "Event Type",
    "variableValue": "Variable Value",
    "typeAliasType": "Type Alias Type",
    "exceptions": "Exceptions",
    "condition": "Condition",
    "extensionMethods": "Extension Methods",
    "note": "Note",
    "warning": "Warning",
    "tip": "Tip",
    "important": "Important",
    "caution": "Caution",
    "tocToggleButton": "Show / Hide Table of Contents",
    "tocFilter": "Filter by title",
    "search": "Search",
    "searchResults": "Search Results for",
    "searchResultsCount": "{count} results for \"{query}\"",
    "searchNoResults": "No results for \"{query}\"",
    "pageFirst": "First",
    "pagePrev": "Previous",
    "pageNext": "Next",
    "pageLast": "Last",
    "inThisArticle": "In this article",
    "nextArticle": "Next",
    "prevArticle": "Previous",
    "backToTop": "Back to top",
    "themeLight": "Light",
    "themeDark": "Dark",
    "themeAuto": "Auto",
    "changeTheme": "Change theme",
    "copy": "Copy",
    "downloadPdf": "Download PDF",
    "_shared": {}
  },
  "_disableToc": false,
  "docurl": "https://github.com/ezEngine/docs-src/blob/main/pages/docs/debugging/debug-rendering.md/#L1"
}